# Wordpress and Mysql example

# Create random passwords
openssl rand -base64 20 | docker secret create mysqlpassword -
openssl rand -base64 20 | docker secret create mysqlrootpassword -

docker secret ls

# Create network mysqlprivate
docker network create -d overlay mysqlprivate

# Create mysql service
docker service create --name mysql --replicas 1 --network mysqlprivate --secret source=mysqlrootpassword,target=mysqlrootpassword --secret source=mysqlpassword,target=mysqlpassword -e MYSQL_ROOT_PASSWORD_FILE="/run/secrets/mysqlrootpassword" -e MYSQL_PASSWORD_FILE="/run/secrets/mysqlpassword" -e MYSQL_USER="wordpress" -e MYSQL_DATABASE="wordpress" mysql:latest

docker service ls
docker service ps mysql

# Create wordpress service
docker service create --name wordpress --replicas 1 --network mysqlprivate --publish 80:80 --secret source=mysqlpassword,target=wpdbpassword,mode=0400 -e WORDPRESS_DB_USER="wordpress" -e WORDPRESS_DB_PASSWORD_FILE="/run/secrets/wpdbpassword" -e WORDPRESS_DB_HOST="mysql:3306" -e WORDPRESS_DB_NAME="wordpress" wordpress:latest

# Mode - specifies that the secret is not group-or-world-readable, by setting the mode to 0400.

docker service ls
docker service ps wordpress

docker service inspect mysql | more
docker service inspect wordpress | more

# Verify
curl -v http://localhost/
curl -v http://localhost/wp-admin/install.php

# Cleanup
docker service rm wordpress
docker service rm mysql

# With docker-compose file
cat docker-compose.yml | more
docker stack deploy --compose-file docker-compose.yml wordpress
docker stack rm wordpress